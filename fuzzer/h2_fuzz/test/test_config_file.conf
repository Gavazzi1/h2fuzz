mutable_fields: {
  data = (("length", "base"), ("type", "base"), ("flags", "base"), ("reserved", "base"), ("streamid", "base"),
          ("length", "pad"), ("padding", "pad"),
          ("data", "data"));
  headers = (("length", "pad"), ("padding", "pad"),
             ("exclusive", "depweight"), ("streamid", "depweight"), ("weight", "depweight"),
             ("name", "header"), ("value", "header"), ("dup", "header"), ("swap", "header"), ("delete", "header"), ("encoding", "header"));
  priority = (("exclusive", "depweight"), ("streamid", "depweight"), ("weight", "depweight"));
  rst_stream = (("errcode", "rst_stream"));
  settings = (("id", "settings"), ("value", "settings"), ("dup", "settings"), ("delete", "settings"), ("swap", "settings"));
  push_prom = (("length", "pad"), ("padding", "pad"),
               ("name", "header"), ("value", "header"), ("dup", "header"), ("swap", "header"), ("delete", "header"), ("encoding", "header"),
               ("reserved", "push_prom"), ("streamid", "push_prom"));
  ping = (("data", "ping"));
  goaway = (("reserved", "goaway"), ("streamid", "goaway"), ("errcode", "goaway"), ("data", "goaway"));
  win_update = (("reserved", "win_update"), ("increment", "win_update"));
  continuation = (("name", "header"), ("value", "header"), ("dup", "header"), ("swap", "header"), ("delete", "header"), ("encoding", "header"));
};

likelihoods: {
  mutate_hdr_settings = 75;

  mutate_operators: {
    bit = 100;
    delete = 0;
    dup = 0;
    swap = 0;
    fix = 0;
  }

  crossover_operators: {
    add = 50;
    splice = 50;
  }
}

